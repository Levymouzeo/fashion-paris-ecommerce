{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\fashion-paris-ecommerce\\\\frontend\\\\src\\\\pages\\\\compte\\\\Adresses.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Addresses = () => {\n  _s();\n  const [addresses, setAddresses] = useState([]);\n  const [form, setForm] = useState({\n    street: '',\n    city: '',\n    postalCode: '',\n    country: ''\n  });\n  const [editingId, setEditingId] = useState(null);\n\n  // Charger les adresses de l'utilisateur connecté\n  useEffect(() => {\n    api.get('/address').then(res => setAddresses(res.data)).catch(err => console.error(err));\n  }, []);\n\n  // Gérer la saisie du formulaire\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Ajouter ou modifier une adresse\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (editingId) {\n        await api.put(`/address/${editingId}`, form);\n      } else {\n        await api.post('/address', form);\n      }\n      // Recharge la liste\n      const res = await api.get('/address');\n      setAddresses(res.data);\n      setForm({\n        street: '',\n        city: '',\n        postalCode: '',\n        country: ''\n      });\n      setEditingId(null);\n    } catch (err) {\n      alert('Erreur lors de la sauvegarde');\n    }\n  };\n\n  // Préparer la modification\n  const handleEdit = address => {\n    setForm(address);\n    setEditingId(address.id);\n  };\n\n  // Supprimer une adresse\n  const handleDelete = async id => {\n    if (window.confirm('Supprimer cette adresse ?')) {\n      await api.delete(`/address/${id}`);\n      setAddresses(addresses.filter(a => a.id !== id));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mes adresses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: addresses.map(addr => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [addr.street, \", \", addr.city, \", \", addr.postalCode, \", \", addr.country, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(addr),\n          children: \"Modifier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(addr.id),\n          children: \"Supprimer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, addr.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [editingId ? 'Modifier' : 'Ajouter', \" une adresse\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"street\",\n        value: form.street,\n        onChange: handleChange,\n        placeholder: \"Rue\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"city\",\n        value: form.city,\n        onChange: handleChange,\n        placeholder: \"Ville\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"postalCode\",\n        value: form.postalCode,\n        onChange: handleChange,\n        placeholder: \"Code postal\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"country\",\n        value: form.country,\n        onChange: handleChange,\n        placeholder: \"Pays\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingId ? 'Modifier' : 'Ajouter'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), editingId && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          setForm({\n            street: '',\n            city: '',\n            postalCode: '',\n            country: ''\n          });\n          setEditingId(null);\n        },\n        children: \"Annuler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Addresses, \"/rcyvlQqOKBbGvJiKnalNjdQv38=\");\n_c = Addresses;\nexport default Addresses;\nvar _c;\n$RefreshReg$(_c, \"Addresses\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","Addresses","_s","addresses","setAddresses","form","setForm","street","city","postalCode","country","editingId","setEditingId","get","then","res","data","catch","err","console","error","handleChange","e","target","name","value","handleSubmit","preventDefault","put","post","alert","handleEdit","address","id","handleDelete","window","confirm","delete","filter","a","children","fileName","_jsxFileName","lineNumber","columnNumber","map","addr","onClick","onSubmit","onChange","placeholder","required","type","_c","$RefreshReg$"],"sources":["C:/wamp64/www/fashion-paris-ecommerce/frontend/src/pages/compte/Adresses.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../../utils/api';\r\n\r\nconst Addresses = () => {\r\n  const [addresses, setAddresses] = useState([]);\r\n  const [form, setForm] = useState({ street: '', city: '', postalCode: '', country: '' });\r\n  const [editingId, setEditingId] = useState(null);\r\n\r\n  // Charger les adresses de l'utilisateur connecté\r\n  useEffect(() => {\r\n    api.get('/address')\r\n      .then(res => setAddresses(res.data))\r\n      .catch(err => console.error(err));\r\n  }, []);\r\n\r\n  // Gérer la saisie du formulaire\r\n  const handleChange = e => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Ajouter ou modifier une adresse\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      if (editingId) {\r\n        await api.put(`/address/${editingId}`, form);\r\n      } else {\r\n        await api.post('/address', form);\r\n      }\r\n      // Recharge la liste\r\n      const res = await api.get('/address');\r\n      setAddresses(res.data);\r\n      setForm({ street: '', city: '', postalCode: '', country: '' });\r\n      setEditingId(null);\r\n    } catch (err) {\r\n      alert('Erreur lors de la sauvegarde');\r\n    }\r\n  };\r\n\r\n  // Préparer la modification\r\n  const handleEdit = address => {\r\n    setForm(address);\r\n    setEditingId(address.id);\r\n  };\r\n\r\n  // Supprimer une adresse\r\n  const handleDelete = async id => {\r\n    if (window.confirm('Supprimer cette adresse ?')) {\r\n      await api.delete(`/address/${id}`);\r\n      setAddresses(addresses.filter(a => a.id !== id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Mes adresses</h2>\r\n      <ul>\r\n        {addresses.map(addr => (\r\n          <li key={addr.id}>\r\n            {addr.street}, {addr.city}, {addr.postalCode}, {addr.country}\r\n            <button onClick={() => handleEdit(addr)}>Modifier</button>\r\n            <button onClick={() => handleDelete(addr.id)}>Supprimer</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h3>{editingId ? 'Modifier' : 'Ajouter'} une adresse</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <input name=\"street\" value={form.street} onChange={handleChange} placeholder=\"Rue\" required />\r\n        <input name=\"city\" value={form.city} onChange={handleChange} placeholder=\"Ville\" required />\r\n        <input name=\"postalCode\" value={form.postalCode} onChange={handleChange} placeholder=\"Code postal\" required />\r\n        <input name=\"country\" value={form.country} onChange={handleChange} placeholder=\"Pays\" required />\r\n        <button type=\"submit\">{editingId ? 'Modifier' : 'Ajouter'}</button>\r\n        {editingId && <button type=\"button\" onClick={() => { setForm({ street: '', city: '', postalCode: '', country: '' }); setEditingId(null); }}>Annuler</button>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addresses;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}