{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\fashion-paris-ecommerce\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport api from '../utils/api';\n\n// 1. Créer le contexte\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// 2. Créer le Provider\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState({\n    token: localStorage.getItem('token') || null,\n    isAuthenticated: false,\n    user: null,\n    isLoading: true // Pour gérer le chargement initial\n  });\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        // Vérifie si le token est expiré\n        if (decodedToken.exp * 1000 > Date.now()) {\n          // Si le token est valide, on peut considérer l'utilisateur comme authentifié\n          // Idéalement, on récupère les infos utilisateur complètes depuis le backend\n          setAuth({\n            token: token,\n            isAuthenticated: true,\n            user: {\n              id: decodedToken.id,\n              role: decodedToken.role\n            },\n            // Infos de base du token\n            isLoading: false\n          });\n        } else {\n          // Token expiré\n          localStorage.removeItem('token');\n          setAuth({\n            token: null,\n            isAuthenticated: false,\n            user: null,\n            isLoading: false\n          });\n        }\n      } catch (error) {\n        // Token invalide\n        localStorage.removeItem('token');\n        setAuth({\n          token: null,\n          isAuthenticated: false,\n          user: null,\n          isLoading: false\n        });\n      }\n    } else {\n      setAuth({\n        token: null,\n        isAuthenticated: false,\n        user: null,\n        isLoading: false\n      });\n    }\n  }, []);\n\n  // Fonction de connexion\n  const login = async (email, password) => {\n    const response = await api.post('/users/login', {\n      email,\n      password\n    });\n    const {\n      token\n    } = response.data;\n    const decodedToken = jwtDecode(token);\n    localStorage.setItem('token', token);\n    setAuth({\n      token: token,\n      isAuthenticated: true,\n      user: {\n        id: decodedToken.id,\n        role: decodedToken.role\n      },\n      isLoading: false\n    });\n  };\n\n  // Fonction de déconnexion\n  const logout = () => {\n    localStorage.removeItem('token');\n    setAuth({\n      token: null,\n      isAuthenticated: false,\n      user: null,\n      isLoading: false\n    });\n  };\n  const value = {\n    ...auth,\n    // Expose token, isAuthenticated, user, isLoading\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"qfZLwwYNVKp+Ys3qsb3SRfMXoPw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jwtDecode","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuth","token","localStorage","getItem","isAuthenticated","user","isLoading","decodedToken","exp","Date","now","id","role","removeItem","error","login","email","password","response","post","data","setItem","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/wamp64/www/fashion-paris-ecommerce/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport api from '../utils/api';\r\n\r\n// 1. Créer le contexte\r\nexport const AuthContext = createContext();\r\n\r\n// 2. Créer le Provider\r\nexport const AuthProvider = ({ children }) => {\r\n  const [auth, setAuth] = useState({\r\n    token: localStorage.getItem('token') || null,\r\n    isAuthenticated: false,\r\n    user: null,\r\n    isLoading: true, // Pour gérer le chargement initial\r\n  });\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const decodedToken = jwtDecode(token);\r\n        // Vérifie si le token est expiré\r\n        if (decodedToken.exp * 1000 > Date.now()) {\r\n          // Si le token est valide, on peut considérer l'utilisateur comme authentifié\r\n          // Idéalement, on récupère les infos utilisateur complètes depuis le backend\r\n          setAuth({\r\n            token: token,\r\n            isAuthenticated: true,\r\n            user: { id: decodedToken.id, role: decodedToken.role }, // Infos de base du token\r\n            isLoading: false,\r\n          });\r\n        } else {\r\n          // Token expiré\r\n          localStorage.removeItem('token');\r\n          setAuth({ token: null, isAuthenticated: false, user: null, isLoading: false });\r\n        }\r\n      } catch (error) {\r\n        // Token invalide\r\n        localStorage.removeItem('token');\r\n        setAuth({ token: null, isAuthenticated: false, user: null, isLoading: false });\r\n      }\r\n    } else {\r\n      setAuth({ token: null, isAuthenticated: false, user: null, isLoading: false });\r\n    }\r\n  }, []);\r\n\r\n  // Fonction de connexion\r\n  const login = async (email, password) => {\r\n    const response = await api.post('/users/login', { email, password });\r\n    const { token } = response.data;\r\n    const decodedToken = jwtDecode(token);\r\n\r\n    localStorage.setItem('token', token);\r\n    setAuth({\r\n      token: token,\r\n      isAuthenticated: true,\r\n      user: { id: decodedToken.id, role: decodedToken.role },\r\n      isLoading: false,\r\n    });\r\n  };\r\n\r\n  // Fonction de déconnexion\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setAuth({\r\n      token: null,\r\n      isAuthenticated: false,\r\n      user: null,\r\n      isLoading: false,\r\n    });\r\n  };\r\n\r\n  const value = {\r\n    ...auth, // Expose token, isAuthenticated, user, isLoading\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}