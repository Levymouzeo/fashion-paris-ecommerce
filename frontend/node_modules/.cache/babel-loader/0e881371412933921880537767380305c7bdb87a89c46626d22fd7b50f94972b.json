{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\fashion-paris-ecommerce\\\\frontend\\\\src\\\\pages\\\\compte\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  // Supposons que l'ID de l'utilisateur est stocké ou récupérable\n  // Ici, on va le chercher via une route /me\n  const [user, setUser] = useState({\n    name: '',\n    email: ''\n  });\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // Créez une route GET /users/me dans votre backend\n    api.get('/users/me').then(res => setUser(res.data)).catch(err => console.error(\"Impossible de charger les infos utilisateur\"));\n  }, []);\n  const handleChange = e => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // La route PUT /users/:id doit vérifier que l'utilisateur modifie son propre profil\n      await api.put(`/users/${user.id}`, {\n        name: user.name,\n        email: user.email\n      });\n      setMessage('Profil mis à jour avec succès !');\n    } catch (err) {\n      setMessage('Erreur lors de la mise à jour.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mon profil\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: user.name,\n      onChange: handleChange,\n      placeholder: \"Nom\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: user.email,\n      onChange: handleChange,\n      placeholder: \"Email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Mettre \\xE0 jour\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"lMf2avbfxiT4AULtJQrXrpLWQtU=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","Profile","_s","user","setUser","name","email","message","setMessage","get","then","res","data","catch","err","console","error","handleChange","e","target","value","handleSubmit","preventDefault","put","id","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["C:/wamp64/www/fashion-paris-ecommerce/frontend/src/pages/compte/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../../utils/api';\r\n\r\nconst Profile = () => {\r\n  // Supposons que l'ID de l'utilisateur est stocké ou récupérable\r\n  // Ici, on va le chercher via une route /me\r\n  const [user, setUser] = useState({ name: '', email: '' });\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Créez une route GET /users/me dans votre backend\r\n    api.get('/users/me') \r\n       .then(res => setUser(res.data))\r\n       .catch(err => console.error(\"Impossible de charger les infos utilisateur\"));\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      // La route PUT /users/:id doit vérifier que l'utilisateur modifie son propre profil\r\n      await api.put(`/users/${user.id}`, { name: user.name, email: user.email });\r\n      setMessage('Profil mis à jour avec succès !');\r\n    } catch (err) {\r\n      setMessage('Erreur lors de la mise à jour.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Mon profil</h2>\r\n      <input type=\"text\" name=\"name\" value={user.name} onChange={handleChange} placeholder=\"Nom\" required />\r\n      <input type=\"email\" name=\"email\" value={user.email} onChange={handleChange} placeholder=\"Email\" required />\r\n      {/* Tu peux ajouter un champ pour changer le mot de passe ici */}\r\n      <button type=\"submit\">Mettre à jour</button>\r\n      {message && <p>{message}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}